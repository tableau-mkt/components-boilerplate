/**
 * Placeholders
 *
 * Using placeholders results in CSS rule combining for selectors.
 */

// Set text to be all uppercase
%allcaps {
  text-transform: uppercase;
  letter-spacing: em(1px);
}

// Remove default list style and spacing
%plain-list {
  margin: 0;
  padding: 0;
  list-style: none;

  > li {
    list-style: none;
  }
}

// Extends %plain-list and makes list items inline-block.
%inline-list {
  @extend %plain-list;

  > li {
    display: inline-block;
  }
}

// Clear floating issues within an element
%clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

// Remove spacing and borders
%reset-box {
  border: 0;
  padding: 0;
  margin: 0;
}

// Stretch an element across the entire relative parent
%cover-absolute {
  position:  absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}

// Vertically center an element. This assumes the parent is position: relative;
%vertical-centered {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

// Apply a transsition on transform rules
%transition-transform {
  -webkit-transition: -webkit-transform   150ms;
     -moz-transition: -moz-transform      150ms;
       -o-transition: -o-transform        150ms;
          transition: transform           150ms;
}

// Set letter spacing to 1px
%letter-spacing {
  letter-spacing: em(1px);
}

// Set a transition on the background and opacity properties
%fade-bg {
  -webkit-transition: background 0.25s, opacity 0.25s;
     -moz-transition: background 0.25s, opacity 0.25s;
       -o-transition: background 0.25s, opacity 0.25s;
          transition: background 0.25s, opacity 0.25s;
}

// Set a transition on the color and opacity properties
%fade-color {
  -webkit-transition: color 0.25s, opacity 0.25s;
     -moz-transition: color 0.25s, opacity 0.25s;
       -o-transition: color 0.25s, opacity 0.25s;
          transition: color 0.25s, opacity 0.25s;
}

// Remove text transforming
%no-text-transform {
  text-transform: none;
}

// Remove text underline behavior for anchor links
%underline-none {
  text-decoration: none;

  &:hover {
    text-decoration: none;
  }
}

// Hide inner text of an element
%hide-text {
  overflow: hidden;
  text-indent: 100%;
  white-space: nowrap;
}

/**
 * Hide elements visually, but keep them available for screen-readers.
 *
 * Used for information required for screen-reader users to understand and use
 * the site where visual display is undesirable. Information provided in this
 * manner should be kept concise, to avoid unnecessary burden on the user. Must
 * not be used for focusable elements (such as links and form elements) as this
 * causes issues for keyboard only or voice recognition users. "!important" is
 * used to prevent unintentional overrides.
 */
%element-invisible {
  position: absolute !important;
  clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px);
}

// Set an element to an initially hidden state but to be revealed later.
// @see _reveal.scss, jquery.contentReveal.js
%reveal-hidden {
  position: relative;
  height: 0;
  overflow: hidden;
}
