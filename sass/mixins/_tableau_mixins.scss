/**
 * Mixins
 *
 * Using mixins will result in duplicate CSS in separate rules.
 */

// Use REMs with a pixel fallback for font sizing.
@mixin font-size($font-size, $line-height: $line-height-body) {
  font-size: $font-size;
  font-size: ($font-size / $base-font-size) * 1rem;
  line-height: $line-height;
}

@mixin tile() {
  text-decoration: none;
  display: inline-block;
  padding: em(5px) em(23px);
  border: 0;
  border-radius: 1px;
}

@mixin transition($properties...) {
  -webkit-transition: $properties;
     -moz-transition: $properties;
       -o-transition: $properties;
          transition: $properties;
}

@mixin animate($keyframes, $duration, $easing, $loop) {
  -webkit-animation: $keyframes $duration $easing $loop;
     -moz-animation: $keyframes $duration $easing $loop;
      -ms-animation: $keyframes $duration $easing $loop;
       -o-animation: $keyframes $duration $easing $loop;
          animation: $keyframes $duration $easing $loop;
}

@mixin transform($properties...) {
  -webkit-transform: $properties;
      -ms-transform: $properties;
          transform: $properties;
}

@mixin box-sizing($value) {
  -moz-box-sizing: $value;
       box-sizing: $value;
}

@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

// Makes a CSS hexagon! based off of http://csshexagon.com/
@mixin hexagon($size, $color, $border: 0) {
  position: relative;
  width: $size; 
  height: ($size * 0.577);
  background-color: $color;
  margin: ($size * 0.288) 0;
  border-left: $border;
  border-right: $border;

  &:before,
  &:after {
    content: "";
    position: absolute;
    @if $border == 0 {
      width: 0;
      left: 0;
      border-left: ($size/2) solid transparent;
      border-right: ($size/2) solid transparent;
    } @else {
      z-index: 1;
      width: ($size * 0.707);
      height: ($size * 0.707);
      -webkit-transform: scaleY(0.5774) rotate(-45deg);
      -ms-transform: scaleY(0.5774) rotate(-45deg);
      transform: scaleY(0.5774) rotate(-45deg);
      background-color: inherit;
      left: ($size * 0.129);
    }
  }

  &:before {
    @if $border == 0 {
      bottom: 100%;
      border-bottom: ($size * 0.288) solid $color;
    } @else {
      top: -($size * 0.353);
      border-top: $border;
      border-right: $border;
    }
  }

  &:after {
    @if $border == 0 {
      top: 100%;
      width: 0;
      border-top: ($size * 0.288) solid $color;
    } @else {
      bottom: -($size * 0.353);
      border-bottom: $border;
      border-left: $border;
    }
  }
}
